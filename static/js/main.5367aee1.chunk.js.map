{"version":3,"sources":["reducers/todos.js","actions/index.js","reducers/visibilityFilter.js","reducers/index.js","components/Link.js","containers/FilterLink.js","components/Footer.js","containers/AddTodo.js","components/Todo.js","components/TodoList.js","containers/VisibleTodoList.js","components/App.js","index.js"],"names":["todos","state","action","type","id","text","completed","map","todo","nextTodoId","VisibilityFilters","visibilityFilter","filter","combineReducers","Link","active","children","onClick","disabled","style","marginLeft","connect","ownProps","dispatch","Footer","FilterLink","input","onSubmit","e","preventDefault","value","trim","ref","node","Todo","textDecoration","TodoList","toggleTodo","key","getVisibleTodos","t","Error","App","VisibleTodoList","store","createStore","rootReducer","render","document","getElementById"],"mappings":"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","file":"static/js/main.5367aee1.chunk.js","sourcesContent":["const todos = (state = [], action) => {\r\n    switch (action.type) {\r\n        case 'ADD_TODO':\r\n            return [\r\n                ...state,\r\n                {\r\n                    id: action.id,\r\n                    text: action.text,\r\n                    completed: false\r\n                }\r\n            ]\r\n        case 'TOGGLE_TODO':\r\n            return state.map(todo =>\r\n                todo.id === action.id ? { ...todo, completed: !todo.completed } : todo\r\n            )\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default todos","let nextTodoId = 0\r\nexport const addTodo = text => ({\r\n    type: 'ADD_TODO',\r\n    id: nextTodoId++,\r\n    text\r\n})\r\n\r\nexport const setVisibilityFilter = filter => ({\r\n    type: 'SET_VISIBILITY_FILTER',\r\n    filter\r\n})\r\n\r\nexport const toggleTodo = id => ({\r\n    type: 'TOGGLE_TODO',\r\n    id\r\n})\r\n\r\nexport const VisibilityFilters = {\r\n    SHOW_ALL: 'SHOW_ALL',\r\n    SHOW_COMPLETED: 'SHOW_COMPLETED',\r\n    SHOW_ACTIVE: 'SHOW_ACTIVE'\r\n}","import { VisibilityFilters } from '../actions'\r\n\r\nconst visibilityFilter = (state = VisibilityFilters.SHOW_ALL, action) => {\r\n    switch (action.type) {\r\n        case 'SET_VISIBILITY_FILTER':\r\n            return action.filter\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default visibilityFilter","import { combineReducers } from 'redux'\r\nimport todos from './todos'\r\nimport visibilityFilter from './visibilityFilter'\r\n\r\nexport default combineReducers({\r\n    todos,\r\n    visibilityFilter\r\n})","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Link = ({ active, children, onClick }) => (\r\n    <button\r\n        onClick={onClick}\r\n        disabled={active}\r\n        style={{\r\n            marginLeft: '4px'\r\n        }}\r\n    >\r\n        {children}\r\n    </button>\r\n)\r\n\r\nLink.propTypes = {\r\n    active: PropTypes.bool.isRequired,\r\n    children: PropTypes.node.isRequired,\r\n    onClick: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Link","import { connect } from 'react-redux'\r\nimport { setVisibilityFilter } from '../actions'\r\nimport Link from '../components/Link'\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    active: ownProps.filter === state.visibilityFilter\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n    onClick: () => dispatch(setVisibilityFilter(ownProps.filter))\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Link)","import React from 'react'\r\nimport FilterLink from '../containers/FilterLink'\r\nimport { VisibilityFilters } from '../actions'\r\n\r\nconst Footer = () => (\r\n    <div>\r\n        <span>Show: </span>\r\n        <FilterLink filter={VisibilityFilters.SHOW_ALL}>All</FilterLink>\r\n        <FilterLink filter={VisibilityFilters.SHOW_ACTIVE}>Active</FilterLink>\r\n        <FilterLink filter={VisibilityFilters.SHOW_COMPLETED}>Completed</FilterLink>\r\n    </div>\r\n)\r\n\r\nexport default Footer","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { addTodo } from '../actions'\r\n\r\nconst AddTodo = ({ dispatch }) => {\r\n    let input\r\n    return (\r\n        <div>\r\n            <form\r\n                onSubmit={e => {\r\n                    e.preventDefault()\r\n                    if (!input.value.trim()) {\r\n                        return\r\n                    }\r\n                    dispatch(addTodo(input.value))\r\n                    input.value = ''\r\n                }}\r\n            >\r\n                <input ref={node => (input = node)} />\r\n                <button type=\"submit\">Add Todo</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect()(AddTodo)","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Todo = ({ onClick, completed, text }) => (\r\n    <li\r\n        onClick={onClick}\r\n        style={{\r\n            textDecoration: completed ? 'line-through' : 'none'\r\n        }}\r\n    >\r\n        {text}\r\n    </li>\r\n)\r\n\r\nTodo.propTypes = {\r\n    onClick: PropTypes.func.isRequired,\r\n    completed: PropTypes.bool.isRequired,\r\n    text: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Todo","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Todo from './Todo'\r\n\r\nconst TodoList = ({ todos, toggleTodo }) => (\r\n    <ul>\r\n        {todos.map(todo => (\r\n            <Todo key={todo.id} {...todo} onClick={() => toggleTodo(todo.id)} />\r\n        ))}\r\n    </ul>\r\n)\r\n\r\nTodoList.propTypes = {\r\n    todos: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        id: PropTypes.number.isRequired,\r\n        completed: PropTypes.bool.isRequired,\r\n        text: PropTypes.string.isRequired\r\n      }).isRequired\r\n    ).isRequired,\r\n    toggleTodo: PropTypes.func.isRequired\r\n}\r\n\r\nexport default TodoList","import { connect } from 'react-redux'\r\nimport { toggleTodo } from '../actions'\r\nimport TodoList from '../components/TodoList'\r\nimport { VisibilityFilters } from '../actions'\r\n\r\nconst getVisibleTodos = (todos, filter) => {\r\n    switch (filter) {\r\n        case VisibilityFilters.SHOW_ALL:\r\n            return todos\r\n        case VisibilityFilters.SHOW_COMPLETED:\r\n            return todos.filter(t => t.completed)\r\n        case VisibilityFilters.SHOW_ACTIVE:\r\n            return todos.filter(t => !t.completed)\r\n        default:\r\n            throw new Error('Unknown filter: ' + filter)\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    todos: getVisibleTodos(state.todos, state.visibilityFilter)\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    toggleTodo: id => dispatch(toggleTodo(id))\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(TodoList)","import React from 'react'\r\nimport Footer from './Footer'\r\nimport AddTodo from '../containers/AddTodo'\r\nimport VisibleTodoList from '../containers/VisibleTodoList'\r\n\r\nconst App = () => (\r\n  <div>\r\n    <AddTodo />\r\n    <VisibleTodoList />\r\n    <Footer />\r\n  </div>\r\n)\r\n\r\nexport default App","import React from 'react'\r\nimport { render } from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport { createStore } from 'redux'\r\nimport rootReducer from './reducers'\r\nimport App from './components/App'\r\n\r\nconst store = createStore(rootReducer)\r\n\r\nrender (\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n)"],"sourceRoot":""}